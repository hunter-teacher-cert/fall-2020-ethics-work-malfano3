# -*- coding: utf-8 -*-
"""gerry.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mYA6s5sKiKd1fVc1TmdFJEr5K1Jh06Pn

Jimmy Dillon & Michael Alfano
"""

# import statements
import random as rn
import math
import copy

"""State is a 6x3 grid of cells. Characteristics: 
1. What is your state's name? 
2. Each cell is inhabited entirely by citizens who vote '1' XOR citizens who vote '0'.
"""

class State:
  
  def __init__ (self, name, districts):
    self.name = name
    self.districts = districts
  
  def __str__(self):
    return "State Name: % s Districts: % s" % (self.name, self.districts)

"""Divide your state into 6 "districts":
A district is a list of coordinate pairs, where each pair represents a member cell.
A district must be comprised of adjacent cells.
"""

class District:
  def __init__ (self, voter_status, coordinates, neighbors):
    self.voter_status = voter_status
    self.coordinates = coordinates
    self.neighbors = neighbors
  
  def __str__ (self):
    return "District Coordinates: % s Vote Status: % s Neighbors: % s" % (self.coordinates, self.voter_status, self.neighbors)

"""Randomly populate each cell (district) with a 1 or 0."""

# Creates a district
# Based on the district's coordinates, populates the district's neighbors double array
def create_district(coordinates):
  neighbors = []
  x = int(coordinates[0])
  y = int(coordinates[-1])
  #print(x)
  #print(y)
  
  total_rows = 3
  total_cols = 6

  for i in range (-1, 2):
    for j in range (-1, 2):
      if ((x+i >= 0) & (x+i < total_cols) & (y+j >=0) & (y+j < total_rows)):
        if ((i != 0) | (j != 0)):
          coord = "("+ str(x+i) + ", " + str(y+j) +")"
          #print (coord)
          neighbors.append(coord)

  voter_status = rn.randint(0, 1)
  
  tmp = District(voter_status, coordinates, neighbors)
  
  #print(neighbors)
  #print(voter_status)
  
  return tmp

create_district("2, 2")

# Creates a state based on a provided name.
# Will populate the state's districts double array (6x3)
# Calls create_district 18 times
def create_state(name):
  # my_state = State(name)
  districts = []

  for row in range(3):
    line = []
    for col in range(6):
      coord = str(col) + ", " + str(row)
      print(coord)
      line.append(create_district(coord))
    districts.append(line.copy())
    my_state = State (name, districts)
  
  print(my_state)
  
  return

create_state("hello")

"""Display a generated configuration."""

def print_state (state):
  return